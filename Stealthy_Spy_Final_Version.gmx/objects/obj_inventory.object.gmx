<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1000</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*
Inventory Items
0 = Cloak
1 = Weapon
*/

globalvar showInv; //Display the inventory?
showInv = true;
globalvar maxItems; //total item slots
maxItems = 2;
global.death = 0;

visible = false; 

for (i = 0; i &lt; maxItems; i += 1)
{
    global.numItems[i] = -1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string> if (showInv)
{
    var x1,x2,y1,y2;
    x1 = view_xview[7];
    x2 = x1 + view_wview[7];
    y1 = view_hview[7]-64;
    y2 = view_hview[7];

    draw_set_color(c_white);
    //draw_set_alpha(0.8);
    draw_rectangle(x1,y1,x2,y2,0);
    draw_set_alpha(1);
    
    for (i = 0; i &lt; maxItems; i += 1)
    {
        draw_sprite(spr_border,0,x1+24+(i * 40),y2-49);
        if (global.numItems[i]&gt;0)
        {
            draw_sprite(spr_items,i,x1+24+(i * 40),y2-49);
 
        }
        if(i==0){
            if(global.numItems[i] &lt;=0){
                draw_sprite(spr_q, 0, x1+24+(i*40), y2-18);
                draw_set_colour(c_black);
                //draw_text(x1+24+(i*40), y2-49, "0");
            }
            else{
                draw_set_colour(c_black);
                draw_text_transformed(x1+24+(i*40) -12, y2-26, string(global.numItems[i]), 1.2, 1.2, 0);
            }
            
        }
        if(i==1){
            if(global.numItems[i] &lt;=0){
                draw_sprite(spr_w, 0, x1+24+(i*40), y2-18);
                draw_set_colour(c_black);
                //draw_text(x1+24+(i*40), y2-49, "1");
            }
            else{
                draw_set_colour(c_black);
                draw_text_transformed(x1+24+(i*40) -12, y2-26, string(global.numItems[i]), 1.2, 1.2, 0);
            }
            
            
        }
    }
    draw_text_transformed(x1+300, y2-49, "Death: "+string(global.death), 2, 2, 0);

}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
